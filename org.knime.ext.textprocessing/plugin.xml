<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.2"?>
<plugin>
   <extension-point id="org.knime.ext.textprocessing.TagSet" name="TagSet" schema="schema/org.knime.ext.textprocessing.TagSet.exsd"/>
   <extension-point id="org.knime.ext.textprocessing.DocumentGrabber" name="DocumentGrabber" schema="schema/org.knime.ext.textprocessing.DocumentGrabber.exsd"/>
   <extension-point id="org.knime.ext.textprocessing.HashingFunction" name="HashingFunction" schema="schema/org.knime.ext.textprocessing.HashingFunction.exsd"/>
   <extension-point id="org.knime.ext.textprocessing.TokenizerFactory" name="TokenizerFactory" schema="schema/org.knime.ext.textprocessing.TokenizerFactory.exsd"/>
   <extension-point id="org.knime.ext.textprocessing.StanfordTaggerModel" name="StanfordTaggerModel" schema="schema/org.knime.ext.textprocessing.StanfordTaggerModel.exsd"/>
   <extension
         point="org.knime.workbench.repository.categories">
      <category
            description="Textprocessing nodes"
            icon="resources/missing.gif"
            level-id="textprocessing"
            name="Text Processing"
            path="/labs">
      </category>
      <category
            description="Textprocessing IO nodes"
            icon="resources/missing.gif"
            level-id="io"
            name="IO"
            path="/labs/textprocessing">
      </category>
      <category
            after="io"
            description="Tagger nodes (POS, NER)"
            icon="resources/missing.gif"
            level-id="tagging"
            name="Enrichment"
            path="/labs/textprocessing">
      </category>
      <category
            after="tagging"
            description="Transformation nodes"
            icon="resources/missing.gif"
            level-id="transformation"
            name="Transformation"
            path="/labs/textprocessing">
      </category>
      <category
            after="transformation"
            icon="resources/missing.gif"
            level-id="preprocessing"
            name="Preprocessing"
            path="/labs/textprocessing">
      </category>
      <category
            after="preprocessing"
            description="Contains nodes that compute several kinds of frequencies"
            icon="resources/missing.gif"
            level-id="frequencies"
            name="Frequencies"
            path="/labs/textprocessing">
      </category>
      <category
            after="mining"
            description="Contains misc nodes of the textprocessing plugin"
            icon="resources/missing.gif"
            level-id="misc"
            name="Misc"
            path="/labs/textprocessing">
      </category>
      <category
            after="misc"
            description="Contains textprocessing meta nodes"
            icon="resources/metanode.png"
            level-id="meta"
            name="Meta Nodes"
            path="/labs/textprocessing">
      </category>
      <category
            after="frequencies"
            description="Contains nodes for mining texts"
            icon="resources/missing.gif"
            level-id="mining"
            locked="true"
            name="Mining"
            path="/labs/textprocessing">
      </category>
   </extension>
   <extension
         point="org.knime.workbench.repository.nodes">
      <node
            category-path="/labs/textprocessing/io"
            factory-class="org.knime.ext.textprocessing.nodes.source.parser.dml.DmlDocumentParserNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/io"
            factory-class="org.knime.ext.textprocessing.nodes.source.parser.sdml.SdmlDocumentParserNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/io"
            factory-class="org.knime.ext.textprocessing.nodes.source.parser.pubmed.PubMedDocumentParserNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/io"
            factory-class="org.knime.ext.textprocessing.nodes.source.parser.flatfile.FlatFileDocumentParserNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/tagging"
            factory-class="org.knime.ext.textprocessing.nodes.tagging.pos.PosTaggerNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/tagging"
            factory-class="org.knime.ext.textprocessing.nodes.tagging.abner.AbnerTaggerNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/transformation"
            factory-class="org.knime.ext.textprocessing.nodes.transformation.bow.BagOfWordsNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.porterstemmer.PorterStemmerNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.kuhlenstemmer.KuhlenStemmerNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.caseconverter.CaseConverterNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.diacriticremover.DiacriticRemoverNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.puncterasure.PunctuationErasureNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.ncharsfilter.NCharsFilterNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.numberfilter.NumberFilterNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.stopwordfilter.StopwordFilterNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/frequencies"
            factory-class="org.knime.ext.textprocessing.nodes.frequencies.tf.TfNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/frequencies"
            factory-class="org.knime.ext.textprocessing.nodes.frequencies.idf.IdfNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/frequencies"
            factory-class="org.knime.ext.textprocessing.nodes.frequencies.filter.FilterNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.tagfilter.pos.PosTagFilterNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.tagfilter.abner.AbnerTagFilterNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.nefilter.NamedEntityFilterNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.tagfilter.ne.NamedEntityFilterNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/tagging"
            factory-class="org.knime.ext.textprocessing.nodes.tagging.dict.inport.DictionaryTaggerNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/transformation"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.transformation.documentvector.DocumentVectorNodeFactory">
      </node>
      <node
            category-path="/labs/textprocessing/transformation"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.transformation.documentvectorhashing.DocumentHashingNodeFactory">
      </node>
      <node
            category-path="/labs/textprocessing/transformation"
            factory-class="org.knime.ext.textprocessing.nodes.transformation.documentvectoradapter.DocumentVectorAdapterNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/misc"
            factory-class="org.knime.ext.textprocessing.nodes.misc.categorytoclass.CategoryToClassNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/transformation"
            factory-class="org.knime.ext.textprocessing.nodes.transformation.termtostring.TermToStringNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/transformation"
            factory-class="org.knime.ext.textprocessing.nodes.transformation.stringstodocument.StringsToDocumentNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/misc"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.view.documentviewer.DocumentViewerNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/transformation"
            factory-class="org.knime.ext.textprocessing.nodes.transformation.termvector.TermVectorNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/mining"
            factory-class="org.knime.ext.textprocessing.nodes.misc.keywordextractor.chisquare.KeywordExtractorNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/mining"
            factory-class="org.knime.ext.textprocessing.nodes.misc.keywordextractor.keygraph.KeygraphNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/io"
            factory-class="org.knime.ext.textprocessing.nodes.source.grabber.DocumentGrabberNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/transformation"
            factory-class="org.knime.ext.textprocessing.nodes.transformation.stringtoterm.StringToTermNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.replacer.RegExReplacerNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/transformation"
            factory-class="org.knime.ext.textprocessing.nodes.transformation.tagtoString.TagToStringNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/transformation"
            factory-class="org.knime.ext.textprocessing.nodes.transformation.documenttostring.DocumentDataExtractorNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/transformation"
            factory-class="org.knime.ext.textprocessing.nodes.transformation.sentenceextraction.SentenceExtractionNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.dictreplacer.DictionaryReplacerNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.termgrouper.TermGrouperNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.snowballstemmer.SnowballStemmerNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.stanfordlemmatizer.StanfordLemmatizerNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/tagging"
            factory-class="org.knime.ext.textprocessing.nodes.tagging.opennlpner.OpennlpNerTaggerNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/misc"
            factory-class="org.knime.ext.textprocessing.nodes.misc.stringmatcher.StringMatcherNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/misc"
            factory-class="org.knime.ext.textprocessing.nodes.misc.tikalangdetector.TikaLangDetectorNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/misc"
            factory-class="org.knime.ext.textprocessing.nodes.misc.tikaparserinput.TikaParserInputNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.hyphenator.HyphenatorNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/frequencies"
            factory-class="org.knime.ext.textprocessing.nodes.frequencies.icf.IcfNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.regexfilter.RegExFilterNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/tagging"
            factory-class="org.knime.ext.textprocessing.nodes.tagging.oscar.OscarTaggerNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.tagfilter.oscar.OscarTagFilterNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/transformation"
            factory-class="org.knime.ext.textprocessing.nodes.transformation.termtostructure.TermToStructureNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/tagging"
            factory-class="org.knime.ext.textprocessing.nodes.tagging.stanford.StanfordTaggerNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.tagfilter.stts.STTSTagFilterNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/io"
            factory-class="org.knime.ext.textprocessing.nodes.source.parser.pdf.PDFDocumentParserNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/io"
            factory-class="org.knime.ext.textprocessing.nodes.source.parser.word.WordDocumentParserNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/io"
            factory-class="org.knime.ext.textprocessing.nodes.source.parser.tika.TikaParserNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/misc"
            factory-class="org.knime.ext.textprocessing.nodes.view.tagcloud.outport.TagCloudNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/frequencies"
            factory-class="org.knime.ext.textprocessing.nodes.cooccurrencecounter.CooccurrenceCounterNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.dictreplacer.twoinports.DictionaryReplacer2InPortsNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.tagfilter.frenchtreebank.FrenchTreebankTagFilterNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.tagfilter.pharma.PharmaDefaultTagFilterNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/frequencies"
            factory-class="org.knime.ext.textprocessing.nodes.misc.ngram.NGramNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="true"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.tagfilter.general.GeneralTagFilterNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/transformation"
            factory-class="org.knime.ext.textprocessing.nodes.transformation.metainfoextraction.MetaInfoExtractionNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/transformation"
            factory-class="org.knime.ext.textprocessing.nodes.transformation.metainfoinsertion.MetaInfoInsertionNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/tagging"
            factory-class="org.knime.ext.textprocessing.nodes.tagging.dict.wildcard.WildcardTaggerNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/mining"
            factory-class="org.knime.ext.textprocessing.nodes.mining.topic.ParallelTopicExtractorNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.caseconverter.CaseConverterNodeFactory2"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.kuhlenstemmer.KuhlenStemmerNodeFactory2"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.hyphenator.HyphenatorNodeFactory2"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.ncharsfilter.NCharsFilterNodeFactory2"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.numberfilter.NumberFilterNodeFactory2"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.nefilter.ModifiableTermFilterNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.porterstemmer.PorterStemmerNodeFactory2"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.puncterasure.PunctuationErasureNodeFactory2"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.regexfilter.RegExFilterNodeFactory2"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.replacer.RegExReplacerNodeFactory2"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.snowballstemmer.SnowballStemmerNodeFactory2"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.stopwordfilter.StopWordFilterNodeFactory2"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.tagfilter2.TagFilterNodeFactory2"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.dictreplacer.DictionaryReplacerNodeFactory2"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.dictreplacer.twoinports.DictionaryReplacer2InPortsNodeFactory2"
            >
      </node>
      <node
            category-path="/labs/textprocessing/misc"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.view.documentviewer2.DocumentViewer2NodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.dictionaryfilter.DictionaryFilterNodeFactory"
            >
      </node>
      <node
            category-path="/labs/textprocessing/misc"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.misc.markuptagfilter.MarkupTagFilterNodeFactory">
      </node>
      <node
            category-path="/labs/textprocessing/frequencies"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.frequencies.df.DfNodeFactory">
      </node>
      <node
            category-path="/labs/textprocessing/preprocessing"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.preprocessing.tagstripper.TagStripperNodeFactory">
      </node>
      <node
            category-path="/labs/textprocessing/frequencies"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.frequencies.entropy.EntropyNodeFactory">
      </node>
      <node
            category-path="/labs/textprocessing/tagging"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.tagging.stanfordnlpnelearner.StanfordNlpNeLearnerNodeFactory">
      </node>
      <node
            category-path="/labs/textprocessing/tagging"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.tagging.stanfordnlpnescorer.StanfordNlpNeScorerNodeFactory">
      </node>
      <node
            category-path="/labs/textprocessing/tagging"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.tagging.stanfordnlpnetagger.StanfordNlpNeTaggerNodeFactory">
      </node>
      <node
            category-path="/labs/textprocessing/io"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.source.rssfeedreader.RSSFeedReaderNodeFactory">
      </node>
      <node
            category-path="/labs/textprocessing/transformation"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.transformation.documentdataassigner.DocumentDataAssignerNodeFactory">
      </node>
      <node
            category-path="/labs/textprocessing/transformation"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.transformation.documentvectorhashing.DocumentHashingNodeFactory2">
      </node>
      <node
            category-path="/labs/textprocessing/transformation"
            deprecated="false"
            factory-class="org.knime.ext.textprocessing.nodes.transformation.documentvectorhashing.applier.DocumentHashingApplierNodeFactory">
      </node>
   </extension>
   <extension
         point="org.eclipse.core.runtime.preferences">
      <initializer
            class="org.knime.ext.textprocessing.preferences.TextprocessingPreferenceInitializer">
      </initializer>
      <initializer
            class="org.knime.ext.textprocessing.preferences.SearchEnginePreferenceInitializer">
      </initializer>
      <initializer
            class="org.knime.ext.textprocessing.preferences.StoragePreferenceInitializer">
      </initializer>
   </extension>
   <extension
         point="org.eclipse.ui.preferencePages">
      <page
            category="org.knime.workbench.ui.preferences"
            class="org.knime.ext.textprocessing.preferences.TextprocessingPreferencePage"
            id="org.knime.ext.textprocessing.preferences.TextprocessingPreferencePage"
            name="Textprocessing">
      </page>
      <page
            category="org.knime.ext.textprocessing.preferences.TextprocessingPreferencePage"
            class="org.knime.ext.textprocessing.preferences.SerachEnginePreferencePage"
            id="org.knime.ext.textprocessing.preferences.SerachEnginePreferencePage"
            name="Search Engines">
      </page>
      <page
            category="org.knime.ext.textprocessing.preferences.TextprocessingPreferencePage"
            class="org.knime.ext.textprocessing.preferences.StoragePreferencePage"
            id="org.knime.ext.textprocessing.preferences.StoragePreferencePage"
            name="Storage">
      </page>
   </extension>
   <extension
         point="org.knime.workbench.repository.metanode">
      <PersistedMetaNode
            category-path="/labs/textprocessing/meta"
            icon="resources/icons/TextProcDefault.png"
            id="simple_preprocessing"
            name="Simple Preprocessing"
            workflowDir="metanode_templates/Simple Preprocessing/">
      </PersistedMetaNode>
      <PersistedMetaNode
            after="simple_preprocessing"
            category-path="/labs/textprocessing/meta"
            icon="resources/icons/TextProcDefault.png"
            id="extended_ner_preprocessing"
            name="Extended NER Preprocessing"
            workflowDir="metanode_templates/Extended NER Preprocessing/">
      </PersistedMetaNode>
      <PersistedMetaNode
            after="extended_ner_preprocessing"
            category-path="/labs/textprocessing/meta"
            icon="resources/icons/TextProcFrequencies.png"
            id="frequencies"
            name="Frequencies"
            workflowDir="metanode_templates/Frequencies/">
      </PersistedMetaNode>
      <PersistedMetaNode
            after="frequencies"
            category-path="/labs/textprocessing/meta"
            icon="resources/icons/TextProcVectors.png"
            id="vector_creation"
            name="Vector Creation"
            workflowDir="metanode_templates/Vector Creation/">
      </PersistedMetaNode>
   </extension>
   <extension
         point="org.knime.core.DataValueRenderer">
      <dataValue
            valueClass="org.knime.ext.textprocessing.data.DocumentValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.DefaultDataValueRenderer$Factory"
               suggestAsDefault="false">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.ext.textprocessing.data.TermValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.DefaultDataValueRenderer$Factory"
               suggestAsDefault="false">
         </renderer>
      </dataValue>
   </extension>
   <extension
         point="org.knime.core.DataType">
      <DataType
            cellClass="org.knime.ext.textprocessing.data.filestore.DocumentBufferedFileStoreCell">
         <serializer
               cellClass="org.knime.ext.textprocessing.data.filestore.DocumentBufferedFileStoreCell"
               serializerClass="org.knime.ext.textprocessing.data.filestore.DocumentBufferedFileStoreCell$Serializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.ext.textprocessing.data.filestore.DocumentFileStoreCell">
         <serializer
               cellClass="org.knime.ext.textprocessing.data.filestore.DocumentFileStoreCell"
               serializerClass="org.knime.ext.textprocessing.data.filestore.DocumentFileStoreCell$Serializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.ext.textprocessing.data.DocumentCell">
         <serializer
               cellClass="org.knime.ext.textprocessing.data.DocumentCell"
               serializerClass="org.knime.ext.textprocessing.data.DocumentCell$DocumentSerializer">
         </serializer>
         <serializer
               cellClass="org.knime.ext.textprocessing.data.DocumentBlobCell"
               serializerClass="org.knime.ext.textprocessing.data.DocumentBlobCell$DocumentSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.ext.textprocessing.data.TermCell">
         <serializer
               cellClass="org.knime.ext.textprocessing.data.TermCell"
               serializerClass="org.knime.ext.textprocessing.data.TermCell$TermSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="org.knime.ext.textprocessing.data.TermCell2">
         <serializer
               cellClass="org.knime.ext.textprocessing.data.TermCell2"
               serializerClass="org.knime.ext.textprocessing.data.TermCell2$TermSerializer">
         </serializer>
      </DataType>
   </extension>
   <extension
         point="org.knime.ext.textprocessing.HashingFunction">
      <HashingFunction
            HashingFunction="org.knime.ext.textprocessing.nodes.transformation.documentvectorhashing.Adler32HashingFunction">
      </HashingFunction>
      <HashingFunction
            HashingFunction="org.knime.ext.textprocessing.nodes.transformation.documentvectorhashing.JavaHashingFunction">
      </HashingFunction>
      <HashingFunction
            HashingFunction="org.knime.ext.textprocessing.nodes.transformation.documentvectorhashing.Lookup3_32bitHashingFunction">
      </HashingFunction>
      <HashingFunction
            HashingFunction="org.knime.ext.textprocessing.nodes.transformation.documentvectorhashing.Murmur3_128bitHashingFunction">
      </HashingFunction>
      <HashingFunction
            HashingFunction="org.knime.ext.textprocessing.nodes.transformation.documentvectorhashing.Murmur3_32bitHashingFunction">
      </HashingFunction>
      <HashingFunction
            HashingFunction="org.knime.ext.textprocessing.nodes.transformation.documentvectorhashing.Siphash24HashingFunction">
      </HashingFunction>
   </extension>
   <extension
         point="org.knime.core.PortType">
      <portType
            color="#2E9AFE"
            hidden="false"
            name="StanfordNERModelPortObject"
            objectClass="org.knime.ext.textprocessing.data.StanfordNERModelPortObject"
            objectSerializer="org.knime.ext.textprocessing.data.StanfordNERModelPortObject$Serializer"
            specClass="org.knime.ext.textprocessing.data.NERModelPortObjectSpec"
            specSerializer="org.knime.ext.textprocessing.data.NERModelPortObjectSpec$Serializer">
      </portType>
      <portType
            hidden="false"
            name="VectorHashingPortObject"
            objectClass="org.knime.ext.textprocessing.data.VectorHashingPortObject"
            objectSerializer="org.knime.ext.textprocessing.data.VectorHashingPortObject$VectorHashingPortObjectSerializer"
            specClass="org.knime.ext.textprocessing.data.VectorHashingPortObjectSpec"
            specSerializer="org.knime.ext.textprocessing.data.VectorHashingPortObjectSpec$Serializer">
      </portType>
   </extension>
   <extension
         point="org.knime.ext.textprocessing.TokenizerFactory">
      <TokenizerFactory
            TokenizerFactory="org.knime.ext.textprocessing.nodes.tokenization.tokenizer.word.OpenNlpEnglishWordTokenizerFactory">
      </TokenizerFactory>
      <TokenizerFactory
            TokenizerFactory="org.knime.ext.textprocessing.nodes.tokenization.tokenizer.word.OpenNlpSimpleTokenizerFactory">
      </TokenizerFactory>
      <TokenizerFactory
            TokenizerFactory="org.knime.ext.textprocessing.nodes.tokenization.tokenizer.word.StanfordNlpPTBTokenizerFactory">
      </TokenizerFactory>
      <TokenizerFactory
            TokenizerFactory="org.knime.ext.textprocessing.nodes.tokenization.tokenizer.word.OpenNlpWhitespaceTokenizerFactory">
      </TokenizerFactory>
   </extension>
   <extension
         point="org.knime.ext.textprocessing.StanfordTaggerModel">
      <StanfordTaggerModel
            StanfordTaggerModel="org.knime.ext.textprocessing.nodes.tagging.stanford.posmodels.EnglishBidirectionalModel"
            Type="Part-Of-Speech"
            name="org.knime.ext.textprocessing.nodes.tagging.stanford.posmodels.EnglishBidirectionalModel"
            type="Part-Of-Speech">
      </StanfordTaggerModel>
      <StanfordTaggerModel
            StanfordTaggerModel="org.knime.ext.textprocessing.nodes.tagging.stanford.posmodels.EnglishLeft3WordsCaselessModel"
            Type="Part-Of-Speech"
            name="org.knime.ext.textprocessing.nodes.tagging.stanford.posmodels.EnglishLeft3WordsCaselessModel"
            type="Part-Of-Speech">
      </StanfordTaggerModel>
      <StanfordTaggerModel
            StanfordTaggerModel="org.knime.ext.textprocessing.nodes.tagging.stanford.posmodels.EnglishLeft3WordsModel"
            Type="Part-Of-Speech"
            name="org.knime.ext.textprocessing.nodes.tagging.stanford.posmodels.EnglishLeft3WordsModel"
            type="Part-Of-Speech">
      </StanfordTaggerModel>
      <StanfordTaggerModel
            StanfordTaggerModel="org.knime.ext.textprocessing.nodes.tagging.stanfordnlpnetagger.nermodels.English7ClassesNoDistsimModel"
            Type="Named Entity Recognition"
            name="org.knime.ext.textprocessing.nodes.tagging.stanfordnlpnetagger.nermodels.English7ClassesNoDistsimModel"
            type="Named Entity Recognition">
      </StanfordTaggerModel>
      <StanfordTaggerModel
            StanfordTaggerModel="org.knime.ext.textprocessing.nodes.tagging.stanfordnlpnetagger.nermodels.English7ClassesDistsimModel"
            Type="Named Entity Recognition"
            name="org.knime.ext.textprocessing.nodes.tagging.stanfordnlpnetagger.nermodels.English7ClassesDistsimModel"
            type="Named Entity Recognition">
      </StanfordTaggerModel>
      <StanfordTaggerModel
            StanfordTaggerModel="org.knime.ext.textprocessing.nodes.tagging.stanfordnlpnetagger.nermodels.English4ClassesNoDistsimModel"
            Type="Named Entity Recognition"
            name="org.knime.ext.textprocessing.nodes.tagging.stanfordnlpnetagger.nermodels.English4ClassesNoDistsimModel"
            type="Named Entity Recognition">
      </StanfordTaggerModel>
      <StanfordTaggerModel
            StanfordTaggerModel="org.knime.ext.textprocessing.nodes.tagging.stanfordnlpnetagger.nermodels.English3ClassesNoWikiCaselessDistsimModel"
            Type="Named Entity Recognition"
            name="org.knime.ext.textprocessing.nodes.tagging.stanfordnlpnetagger.nermodels.English3ClassesNoWikiCaselessDistsimModel"
            type="Named Entity Recognition">
      </StanfordTaggerModel>
      <StanfordTaggerModel
            StanfordTaggerModel="org.knime.ext.textprocessing.nodes.tagging.stanfordnlpnetagger.nermodels.English4ClassesDistsimModel"
            Type="Named Entity Recognition"
            name="org.knime.ext.textprocessing.nodes.tagging.stanfordnlpnetagger.nermodels.English4ClassesDistsimModel"
            type="Named Entity Recognition">
      </StanfordTaggerModel>
      <StanfordTaggerModel
            StanfordTaggerModel="org.knime.ext.textprocessing.nodes.tagging.stanfordnlpnetagger.nermodels.English3ClassesNoDistsimModel"
            Type="Named Entity Recognition"
            name="org.knime.ext.textprocessing.nodes.tagging.stanfordnlpnetagger.nermodels.English3ClassesNoDistsimModel"
            type="Named Entity Recognition">
      </StanfordTaggerModel>
      <StanfordTaggerModel
            StanfordTaggerModel="org.knime.ext.textprocessing.nodes.tagging.stanfordnlpnetagger.nermodels.English3ClassesDistsimModel"
            Type="Named Entity Recognition"
            name="org.knime.ext.textprocessing.nodes.tagging.stanfordnlpnetagger.nermodels.English3ClassesDistsimModel"
            type="Named Entity Recognition">
      </StanfordTaggerModel>
   </extension>
</plugin>
