<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>org.knime</groupId>
	<artifactId>org.knime.ext.textprocessing.tika.fetch-jars</artifactId>
	<version>${revision}</version>
	<packaging>pom</packaging>

	<description>Running the maven goal &quot;package&quot; on this maven
		project will fetch all jars required for base tests and put them into
		the libs/ directory.</description>

	<properties>
		<revision>4.5.0</revision>
		<tika.version>2.9.4</tika.version>
		<excludeArtifacts>commons-io, commons-lang3, commons-logging, fontbox, guava, log4j-api, log4j-core, log4j-slf4j2-impl, opennlp-tools, pdfbox, pdfbox-tools, poi, poi-ooxml, poi-ooxml-lite, poi-scratchpad, slf4j-api, xercesImpl, xml-apis, xmlbeans</excludeArtifacts>
	</properties>

	<!-- NOTE ABOUT DEALING WITH DEPENDENCIES:
	
	For *large* dependencies that are *already* part of KNIME we should avoid
	duplicating
	them (for small dependencies it is usually not worth the hassle).
	
	*Large* in this context means: They contain a lot of classes (e.g.
	scala-library) or
	they have a lot of transitive dependencies (e.g. hadoop), or both.
	
	How to avoid duplication?
	
	Option (1)
	  Exclude them via
	build>plugins>plugin(maven-dependency-plugin)>executions>configuration (see
	at the bottom
	  of this file).
	  Pro: This leaves the maven dependency tree intact (for browsing), but prevents
	them from being copied to the libs/ directory.
	  Contra: A lot of work when dependencies have themselves have a lot of
	transitive dependencies, because you need to
			  exclude them manually too, then.
	  
	Option (2):
	  Exclude them via dependencies>dependency>exclusions.
	  Pro: Works well for dependencies that themselves have a lot of transitive
	dependencies.
	  Contra: Alters the maven dependency tree, which may be confusing.
	 -->
	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.apache.tika/tika-core -->
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-core</artifactId>
			<version>${tika.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.tika/tika-parsers-standard-package -->
		<dependency>
		    <groupId>org.apache.tika</groupId>
		    <artifactId>tika-parsers-standard-package</artifactId>
		    <version>${tika.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-langdetect-optimaize</artifactId>
			<version>${tika.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-langdetect-lingo24</artifactId>
			<version>${tika.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-langdetect-mitll-text</artifactId>
			<version>${tika.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-langdetect-opennlp</artifactId>
			<version>${tika.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>copy-sources</id>
						<configuration>
							<classifier>sources</classifier>
							<includeScope>runtime</includeScope>
							<outputDirectory>../</outputDirectory>
							<excludeArtifactIds>${excludeArtifacts}</excludeArtifactIds>
						</configuration>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
					</execution>
					<execution>
						<id>copy-dependencies</id>
						<configuration>
							<includeScope>runtime</includeScope>
							<outputDirectory>../</outputDirectory>
							<excludeArtifactIds>${excludeArtifacts}</excludeArtifactIds>
						</configuration>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
