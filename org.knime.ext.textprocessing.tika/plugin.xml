<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?eclipse version="3.2"?><plugin>
          
    <extension point="org.knime.workbench.repository.categories">
              
        <category description="Textprocessing IO nodes" icon="resources/missing.gif" level-id="io" name="IO" path="/applications/textprocessing">
      </category>
              
        <category after="mining" description="Contains misc nodes of the textprocessing plugin" icon="resources/missing.gif" level-id="misc" name="Misc" path="/applications/textprocessing">
      </category>
           
    </extension>
       
    <extension point="org.knime.workbench.repository.nodes">
              
        <node category-path="/applications/textprocessing/misc" factory-class="org.knime.ext.textprocessing.nodes.misc.tikalangdetector.TikaLangDetectorNodeFactory">
      </node>
              
        <node category-path="/applications/textprocessing/misc" factory-class="org.knime.ext.textprocessing.nodes.misc.tikaparserinput.TikaParserInputNodeFactory">
      </node>
              
        <node category-path="/applications/textprocessing/io" factory-class="org.knime.ext.textprocessing.nodes.source.parser.tika.TikaParserNodeFactory">
      </node>
      
    </extension>
       
    <extension point="org.knime.core.DataValueRenderer">
              
        <dataValue valueClass="org.knime.ext.textprocessing.data.DocumentValue">
                     
            <renderer rendererFactoryClass="org.knime.core.data.renderer.DefaultDataValueRenderer$Factory" suggestAsDefault="false">
         </renderer>
                  
        </dataValue>
              
        <dataValue valueClass="org.knime.ext.textprocessing.data.TermValue">
                     
            <renderer rendererFactoryClass="org.knime.core.data.renderer.DefaultDataValueRenderer$Factory" suggestAsDefault="false">
         </renderer>
                  
        </dataValue>
           
    </extension>
       
    <extension point="org.knime.core.DataType">
              
        <DataType cellClass="org.knime.ext.textprocessing.data.filestore.DocumentBufferedFileStoreCell">
                     
            <serializer cellClass="org.knime.ext.textprocessing.data.filestore.DocumentBufferedFileStoreCell" serializerClass="org.knime.ext.textprocessing.data.filestore.DocumentBufferedFileStoreCell$Serializer">
         </serializer>
                  
        </DataType>
              
        <DataType cellClass="org.knime.ext.textprocessing.data.filestore.DocumentFileStoreCell">
                     
            <serializer cellClass="org.knime.ext.textprocessing.data.filestore.DocumentFileStoreCell" serializerClass="org.knime.ext.textprocessing.data.filestore.DocumentFileStoreCell$Serializer">
         </serializer>
                  
        </DataType>
              
        <DataType cellClass="org.knime.ext.textprocessing.data.DocumentCell">
                     
            <serializer cellClass="org.knime.ext.textprocessing.data.DocumentCell" serializerClass="org.knime.ext.textprocessing.data.DocumentCell$DocumentSerializer">
         </serializer>
                     
            <serializer cellClass="org.knime.ext.textprocessing.data.DocumentBlobCell" serializerClass="org.knime.ext.textprocessing.data.DocumentBlobCell$DocumentSerializer">
         </serializer>
                  
        </DataType>
              
        <DataType cellClass="org.knime.ext.textprocessing.data.TermCell">
                     
            <serializer cellClass="org.knime.ext.textprocessing.data.TermCell" serializerClass="org.knime.ext.textprocessing.data.TermCell$TermSerializer">
         </serializer>
                  
        </DataType>
              
        <DataType cellClass="org.knime.ext.textprocessing.data.TermCell2">
                     
            <serializer cellClass="org.knime.ext.textprocessing.data.TermCell2" serializerClass="org.knime.ext.textprocessing.data.TermCell2$TermSerializer">
         </serializer>
                  
        </DataType>
           
    </extension>
       
    <extension point="org.knime.core.PortType">
              
        <portType color="#2E9AFE" hidden="false" name="Stanford NER Model" objectClass="org.knime.ext.textprocessing.data.StanfordNERModelPortObject" objectSerializer="org.knime.ext.textprocessing.data.StanfordNERModelPortObject$Serializer" specClass="org.knime.ext.textprocessing.data.NERModelPortObjectSpec" specSerializer="org.knime.ext.textprocessing.data.NERModelPortObjectSpec$Serializer">
      </portType>
              
        <portType hidden="false" name="Vector Hashing" objectClass="org.knime.ext.textprocessing.data.VectorHashingPortObject" objectSerializer="org.knime.ext.textprocessing.data.VectorHashingPortObject$VectorHashingPortObjectSerializer" specClass="org.knime.ext.textprocessing.data.VectorHashingPortObjectSpec" specSerializer="org.knime.ext.textprocessing.data.VectorHashingPortObjectSpec$Serializer">
      </portType>
              
        <portType hidden="false" name="Document Vector" objectClass="org.knime.ext.textprocessing.data.DocumentVectorPortObject" objectSerializer="org.knime.ext.textprocessing.data.DocumentVectorPortObject$DocumentVectorPortObjectSerializer" specClass="org.knime.ext.textprocessing.data.DocumentVectorPortObjectSpec" specSerializer="org.knime.ext.textprocessing.data.DocumentVectorPortObjectSpec$Serializer">
      </portType>
              
        <portType color="#be24d2" hidden="false" name="OpenNLP NER Model" objectClass="org.knime.ext.textprocessing.data.OpenNlpNerTaggerModelPortObject" objectSerializer="org.knime.ext.textprocessing.data.OpenNlpNerTaggerModelPortObject$Serializer" specClass="org.knime.ext.textprocessing.data.OpenNlpNerTaggerModelPortObjectSpec" specSerializer="org.knime.ext.textprocessing.data.OpenNlpNerTaggerModelPortObjectSpec$Serializer">
      </portType>
           
    </extension>
       
    <extension point="org.knime.core.DataColumnMetaDataType">
              
        <DataColumnMetaData dataColumnMetaDataExtension="org.knime.ext.textprocessing.data.tag.TaggedValueMetaDataExtension">
      </DataColumnMetaData>
           
    </extension>
       
    
</plugin>
